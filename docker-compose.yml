version: '2'
services:
  traefik:
    image: traefik:v1.7.18
    restart: always
    domainname: ${DOMAINNAME}
    ports:
      - 80:80
      - 443:443
    networks:
      - default
      - traefik_proxy
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"  
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
    container_name: traefik
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    restart: unless-stopped
    environment:
      - TZ=${TZ}
        #- HOSTNAME="AnderPlex"
        #- PLEX_CLAIM="claim-4i8LLyxGDN9zPjXscfys"
      - PUID=${PUID}
      - PGID=${PGID}
        #- ADVERTISE_IP="https://192.168.1.9:32400/"
      - VERSION=docker
    volumes:
      - ./plex/config:/config
      - /mnt/ext01/plex/transcode:/transcode
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - /mnt/music:/mnt/music
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PGID=${PGID}
      - PUID=${PUID}
    volumes:
      - ./jellyfin/config:/config
      - /mnt/ext01/plex/transcode:/transcode
      - /mnt/media:/mnt/media
      - /mnt/music:/mnt/music
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jellyfin"
      - "traefik.frontend.rule=Host:jellyfin.${DOMAINNAME}"
      - "traefik.port=8096"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  nextcloud:
    container_name: nextcloud
    restart: unless-stopped
    image: linuxserver/nextcloud
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    depends_on:
      - nextcloud-db
    volumes:
      - ./nextcloud/config:/config
      - /mnt/ext01/nextcloud/data:/data
    ports:
      - 4443:443
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.frontend.rule=Host:cloud.${DOMAINNAME}"
      - "traefik.port=443"
      - "traefik.protocol=https"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  nextcloud-db:
    image: postgres
    container_name: nextcloud-db
    restart: unless-stopped
    networks:
      - traefik_proxy
    environment:
      - POSTGRES_PASSWORD=nextcloud
      - POSTGRES_USER=nextcloud
    volumes:
      - nextcloud_db:/var/lib/postgresql/data
  bitwarden:
    image: bitwardenrs/server
    container_name: bitwarden
    restart: unless-stopped
    volumes:
      - ./bitwarden/data:/data
    environment:
      SIGNUPS_ALLOWED: "true"
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=bitwarden"
      - "traefik.frontend.rule=Host:bitwarden.${DOMAINNAME}"
      - "traefik.port=80"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=bitwarden.${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  transmission:
    container_name: transmission
    image: linuxserver/transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./transmission/config:/config
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - /mnt/data:/mnt/data
      - /mnt/ext01/torrents:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    networks:
      - traefik_proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=transmission"
      - "traefik.frontend.rule=Host:transmission.${DOMAINNAME}"
      - "traefik.port=9091"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
  rutorrent:
    container_name: rutorrent
    image: linuxserver/rutorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./rutorrent/config:/config
      - /mnt/media:/mnt/media
      - /mnt/data:/mnt/data
      - /mnt/ext01/torrents:/downloads
    ports:
      - 5000:5000
      - 51213:51213
      - 6881:6881/udp
    networks:
      - traefik_proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=rutorrent"
      - "traefik.frontend.rule=Host:rutorrent.${DOMAINNAME}"
      - "traefik.port=80"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sabnzbd/config:/config
      - /mnt/data:/mnt/data
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - /mnt/data/sabnzbd/complete:/downloads
      - /mnt/data/sabnzbd/incomplete:/incomplete-downloads
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sabnzbd"
      - "traefik.frontend.rule=Host:sabnzbd.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - ./radarr/config:/config
      - /mnt/data:/mnt/data
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - "/etc/localtime:/etc/localtime:ro"
      - ./shared:/shared
    ports:
      - 7878:7878
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  radarr-hd:
    image: linuxserver/radarr
    container_name: radarr-hd
    volumes:
      - ./radarr-hd/config:/config
      - /mnt/data:/mnt/data
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - "/etc/localtime:/etc/localtime:ro"
      - ./shared:/shared
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr-hd"
      - "traefik.frontend.rule=Host:radarr-hd.${DOMAINNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    volumes:
      - ./sonarr/config:/config
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - /mnt/data:/mnt/data
      - "/etc/localtime:/etc/localtime:ro"
      - ./shared:/shared
    ports:
      - "8989:8989"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./lidarr/config:/config
      - /mnt/music:/mnt/music
      - /mnt/data:/mnt/data
    ports:
      - 8686:8686
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lidarr"
      - "traefik.frontend.rule=Host:lidarr.${DOMAINNAME}"
      - "traefik.port=8686"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    volumes:
      - ./jackett/config:/config
      - ./shared:/shared
    ports:
      - 9117:9117
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jackett"
      - "traefik.frontend.rule=Host:jackett.${DOMAINNAME}"
      - "traefik.port=9117"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
  headphones:
    image: linuxserver/headphones
    container_name: headphones
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./headphones/config:/config
      - /mnt/music:/mnt/music
      - /mnt/data:/mnt/data
    ports:
      - 8181:8181
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=headphones"
     - "traefik.frontend.rule=Host:headphones.${DOMAINNAME}"
     - "traefik.port=8181"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  flexget:
    image: cpoppema/docker-flexget
    container_name: flexget
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEB_PASSWD=PZyvE9TZHbR
      - TORRENT_PLUGIN=transmission
      - FLEXGET_LOG_LEVEL=debug
    ports:
      - 5050:5050
    volumes:
      - ./flexget/config:/config
      - /mnt/media:/mnt/media
      - /mnt/media02:/mnt/media02
      - ./flexget/downloads:/downloads
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=flexget"
     - "traefik.frontend.rule=Host:flexget.${DOMAINNAME}"
     - "traefik.port=5050"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
     - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    volumes:
      - /mnt/backup/minio:/data
      - ./minio/config:/root/.minio
    command: minio server /data
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=minio"
     - "traefik.frontend.rule=Host:minio.${DOMAINNAME}"
     - "traefik.port=9000"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./heimdall/config:/config
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=heimdall"
     - "traefik.frontend.rule=Host:home.${DOMAINNAME}"
     - "traefik.port=80"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
     - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
  odoo:
    image: odoo
    container_name: odoo
    depends_on:
      - odoo-db
    environment:
      - USER=odoo
      - PASSWORD=odoo
      - HOST=odoo-db
    volumes:
      - ./odoo/config:/etc/odoo
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=odoo"
     - "traefik.frontend.rule=Host:odoo.${DOMAINNAME}"
     - "traefik.port=8069"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  odoo-db:
    image: postgres
    container_name: odoo-db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
    networks:
      - traefik_proxy
    volumes:
      - odoo_db:/var/lib/postgresql/data
  firefly:
    image: jc5x/firefly-iii
    depends_on:
      - firefly_db
    networks:
      - traefik_proxy
    env_file: ./firefly/.env
    volumes:
      - ./firefly/export:/var/www/firefly-iii/storage/export
      - ./firefly/upload:/var/www/firefly-iii/storage/upload
    restart: unless-stopped
    labels:
     - "traefik.enable=true"
     - "traefik.backend=firefly"
     - "traefik.frontend.rule=Host:firefly.${DOMAINNAME}"
     - "traefik.port=80"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  firefly_db:
    image: postgres:10
    environment:
      - POSTGRES_PASSWORD=firefly
      - POSTGRES_USER=firefly
    networks:
      - traefik_proxy
    volumes:
      - firefly_db:/var/lib/postgresql/data
  beets:
    image: linuxserver/beets
    container_name: beets
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./beets/config:/config
      - /mnt/music:/mnt/music
      - /mnt/music/Library/Albums:/music
      - ./beets/downloads:/downloads
      - /mnt/data:/mnt/data
    networks:
      - traefik_proxy
    restart: unless-stopped
    labels:
     - "traefik.enable=true"
     - "traefik.backend=beets"
     - "traefik.frontend.rule=Host:beets.${DOMAINNAME}"
     - "traefik.port=8337"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
     - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
  zenphoto:
    image: linuxserver/nginx
    container_name: zenphoto
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./zenphoto/config:/config
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=zenphoto"
     - "traefik.frontend.rule=Host:zenphoto.${DOMAINNAME}"
     - "traefik.port=80"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  freshrss:
    image: linuxserver/freshrss
    container_name: freshrss
    depends_on:
      - freshrss-db
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./freshrss/config:/config
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=freshrss"
     - "traefik.frontend.rule=Host:freshrss.${DOMAINNAME}"
     - "traefik.port=80"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  freshrss-db:
    image: mariadb
    container_name: freshrss-db
    environment:
      - MYSQL_ROOT_PASSWORD=freshrss
      - MYSQL_PASSWORD=freshrss
      - MYSQL_USER=freshrss
      - MYSQL_DATABASE=freshrss
    networks:
      - traefik_proxy
    volumes:
      - freshrss_db:/var/lib/mysql
  piwigo:
    image: linuxserver/piwigo
    container_name: piwigo
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./piwigo/config:/config
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=piwigo"
     - "traefik.frontend.rule=Host:piwigo.${DOMAINNAME}"
     - "traefik.port=80"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
     - "traefik.frontend.headers.frameDeny=true" 
  piwigo-db:
    image: mariadb
    container_name: piwigo-db
    environment:
      - MYSQL_ROOT_PASSWORD=piwigo
      - MYSQL_PASSWORD=piwigo
      - MYSQL_USER=piwigo
      - MYSQL_DATABASE=piwigo
    networks:
      - traefik_proxy
    volumes:
      - piwigo_db:/var/lib/mysql
  thelounge:
    image: linuxserver/thelounge
    container_name: thelounge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./thelounge/config:/config
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
     - "traefik.enable=true"
     - "traefik.backend=thelounge"
     - "traefik.frontend.rule=Host:irc.${DOMAINNAME}"
     - "traefik.port=9000"
     - "traefik.docker.network=traefik_proxy"
     - "traefik.frontend.headers.SSLRedirect=true"
     - "traefik.frontend.headers.STSSeconds=315360000"
     - "traefik.frontend.headers.browserXSSFilter=true"
     - "traefik.frontend.headers.contentTypeNosniff=true"
     - "traefik.frontend.headers.forceSTSHeader=true"
     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
     - "traefik.frontend.headers.STSIncludeSubdomains=true"
     - "traefik.frontend.headers.STSPreload=true"
  minecraft:
    image: itzg/minecraft-bedrock-server
    container_name: minecraft
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - EULA=TRUE
    ports:
      - 19132:19132/udp
    volumes:
      - /mnt/ext01/minecraft/data:/data
    restart: unless-stopped
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
volumes:
  firefly_db: ~
  nextcloud_db: ~
  odoo_db: ~
  piwigo_db: ~
  freshrss_db: ~
